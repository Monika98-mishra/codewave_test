{"ast":null,"code":"var _jsxFileName = \"C:\\\\reactyoutube\\\\codewave_Test\\\\codewave_test\\\\movies_app\\\\src\\\\Component\\\\DisplayMovie.jsx\";\nimport React, { useState } from 'react';\nimport { useMemo } from 'react';\nimport './DisplayMovie.css';\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\n\nfunction DisplayCity({\n  moviedata,\n  setResult\n}) {\n  const [search, setSearch] = useState(\"\");\n\n  const renderlist = moviedata => {\n    if (moviedata.length > 0) {\n      return moviedata.map((item, index) => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"cards\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          key: index,\n          className: \"card\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 25\n          }\n        }, console.log(item), /*#__PURE__*/React.createElement(\"img\", {\n          src: item.Poster,\n          width: \"150\",\n          alt: item.Title,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(\"h4\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"a\", {\n          href: \"#\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          to: `/DetailsMovie/${item.imdbID}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 46\n          }\n        }, item.Title)))));\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 20\n        }\n      }, \"No data found\");\n    }\n  };\n\n  const changefn = e => {\n    setSearch(e.target.value);\n\n    if (e.target.value) {\n      let filteredData = moviedata.filter(a => a.Title.toLowerCase().includes(search));\n      filteredData.length > 0 ? setResult(filteredData, true) : setResult(filteredData, false);\n    } else {\n      setResult([], true);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"center\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"titlebar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 29\n    }\n  }, \"Search Movie\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"SearchMovie\",\n    \"aria-label\": \"search\",\n    value: search,\n    onChange: changefn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 33\n    }\n  })))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cards\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, renderlist(moviedata)));\n}\n\nexport default DisplayCity;","map":{"version":3,"sources":["C:/reactyoutube/codewave_Test/codewave_test/movies_app/src/Component/DisplayMovie.jsx"],"names":["React","useState","useMemo","BrowserRouter","Router","Route","Switch","Link","DisplayCity","moviedata","setResult","search","setSearch","renderlist","length","map","item","index","console","log","Poster","Title","imdbID","changefn","e","target","value","filteredData","filter","a","toLowerCase","includes"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useMemo } from 'react';\nimport './DisplayMovie.css';\nimport {BrowserRouter as Router, Route , Switch  , Link} from \"react-router-dom\";\n\nfunction DisplayCity({moviedata, setResult}) {\n    \n\n    const [search, setSearch] = useState(\"\");\n    \n\n    \n\n    const renderlist = (moviedata) => {\n        if (moviedata.length > 0) {\n            \n            return moviedata.map((item, index) => {\n\n                return (\n                    <div className=\"cards\">\n                        <div key={index} className=\"card\">\n                            { console.log(item) }\n                            <img src={item.Poster} width=\"150\" alt={item.Title} />\n                            <h4><a href=\"#\" ><Link to={`/DetailsMovie/${item.imdbID}`}>{item.Title}</Link></a></h4>\n                        </div>\n                        \n                    </div>\n\n\n                )\n\n            })\n        } else {\n            return <p>No data found</p>\n        }\n    }\n\n    const changefn = (e) => {\n        setSearch(e.target.value);\n        if(e.target.value) {\n            let filteredData = moviedata.filter(a=> a.Title.toLowerCase().includes(search));\n            filteredData.length > 0 ? setResult(filteredData, true) : setResult(filteredData, false);\n        } else {\n            setResult([], true);\n        }\n            \n    }\n\n\n    return (\n        <div >\n            <center>\n                {/* <h2>Search Movie</h2> */}\n                <table className=\"titlebar\">\n                    <tbody>\n                        <tr>\n                            <td>\n                                Search Movie\n                            </td>\n                            <td>\n                                <input type=\"text\" placeholder=\"SearchMovie\" aria-label=\"search\" value={search} onChange={changefn} />\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </center>\n            <div className=\"cards\">\n                {renderlist(moviedata)}\n            </div>\n\n\n\n\n\n\n        </div>\n    )\n}\n\nexport default DisplayCity;"]},"metadata":{},"sourceType":"module"}