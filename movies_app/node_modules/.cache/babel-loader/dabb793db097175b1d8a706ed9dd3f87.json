{"ast":null,"code":"var _jsxFileName = \"C:\\\\reactyoutube\\\\codewave_Test\\\\codewave_test\\\\movies_app\\\\src\\\\Component\\\\HooksComponent.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport DisplayMovie from './DisplayMovie.jsx';\nconst url = `http://www.omdbapi.com/?apikey=230afcff&s=Marvel&type=movie`;\n\nfunction Hooks() {\n  const [movie, setmovie] = useState([]);\n  const [allmovie, setAllMovie] = useState([]);\n  useEffect(() => {\n    getResult();\n  }, []);\n\n  const getResult = async () => {\n    await fetch(url).then(res => res.json()).then(data => {\n      setAllMovie(data.Search);\n      setmovie(data.Search);\n    });\n  };\n\n  const setResult = (data, bool) => {\n    if (bool) {\n      if (data.length > 0) {\n        setmovie(data);\n      } else {\n        setmovie(allmovie);\n      }\n    } else {\n      setmovie([]);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DisplayMovie, {\n    moviedata: movie,\n    setResult: setResult,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default Hooks;","map":{"version":3,"sources":["C:/reactyoutube/codewave_Test/codewave_test/movies_app/src/Component/HooksComponent.jsx"],"names":["React","useState","useEffect","DisplayMovie","url","Hooks","movie","setmovie","allmovie","setAllMovie","getResult","fetch","then","res","json","data","Search","setResult","bool","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AAIA,MAAMC,GAAG,GAAI,6DAAb;;AAEA,SAASC,KAAT,GAAiB;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AAGAC,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,SAAS;AACZ,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,SAAS,GAAG,YAAY;AAC1B,UAAMC,KAAK,CAACP,GAAD,CAAL,CACDQ,IADC,CACKC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADb,EAEDF,IAFC,CAEKG,IAAD,IAAU;AACZN,MAAAA,WAAW,CAACM,IAAI,CAACC,MAAN,CAAX;AACAT,MAAAA,QAAQ,CAACQ,IAAI,CAACC,MAAN,CAAR;AACH,KALC,CAAN;AAMH,GAPD;;AASA,QAAMC,SAAS,GAAG,CAACF,IAAD,EAAOG,IAAP,KAAgB;AAC9B,QAAIA,IAAJ,EAAU;AACN,UAAIH,IAAI,CAACI,MAAL,GAAc,CAAlB,EAAqB;AACjBZ,QAAAA,QAAQ,CAACQ,IAAD,CAAR;AACH,OAFD,MAEO;AACHR,QAAAA,QAAQ,CAACC,QAAD,CAAR;AACH;AACJ,KAND,MAMO;AACHD,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACH;AAEJ,GAXD;;AAgBA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,YAAD;AAAc,IAAA,SAAS,EAAED,KAAzB;AAAgC,IAAA,SAAS,EAAEW,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH;;AAED,eAAeZ,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport DisplayMovie from './DisplayMovie.jsx';\n\n\n\nconst url = `http://www.omdbapi.com/?apikey=230afcff&s=Marvel&type=movie`;\n\nfunction Hooks() {\n    const [movie, setmovie] = useState([]);\n    const [allmovie, setAllMovie] = useState([]);\n\n\n    useEffect(() => {\n        getResult()\n    }, []);\n\n    const getResult = async () => {\n        await fetch(url)\n            .then((res) => res.json())\n            .then((data) => {\n                setAllMovie(data.Search);\n                setmovie(data.Search)\n            });\n    }\n\n    const setResult = (data, bool) => {\n        if (bool) {\n            if (data.length > 0) {\n                setmovie(data)\n            } else {\n                setmovie(allmovie)\n            }\n        } else {\n            setmovie([])\n        }\n\n    }\n\n\n\n\n    return (\n        <div>\n            <DisplayMovie moviedata={movie} setResult={setResult} />\n        </div>\n    )\n}\n\nexport default Hooks;"]},"metadata":{},"sourceType":"module"}